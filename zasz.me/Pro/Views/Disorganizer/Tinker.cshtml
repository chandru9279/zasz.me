@using zasz.me.Pro.Models
@using zasz.me.Shared.Controllers.Utils
@model TinkerModel
@{
    ViewBag.Title = "Tinker";
    var Attribs = new { @class = "ProTextBox" };
    var AttribsArea = new { @class = "ProTextArea", rows = 10 };
}
@section Head
{
    <script src="@Url.Content("~/Scripts/jpicker-1.1.6.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
                var jPickerConfig = {
                    window: {
                        expandable: true,
                        title: 'Pick Background Color',
                        alphaSupport: true
                    },
                    color: {
                    },
                    images: {
                        clientPath: '/Content/jPicker/Images/'
                    }
                };
                $('#ForegroundExpandable').jPicker(jPickerConfig);
                $('#BackgroundExpandable').jPicker(jPickerConfig);
                @{
                    var ForeColor = (!string.IsNullOrEmpty(Model.ForegroundColor)) ? Model.ForegroundColor : "FF0000FF"; 
                    var BackColor = (!string.IsNullOrEmpty(Model.BackgroundColor)) ? Model.BackgroundColor : "FFFFFFFF"; 
                }
                $.jPicker.List[0].color.active.val('ahex', '@ForeColor');
                $.jPicker.List[1].color.active.val('ahex', '@BackColor');
            });
    </script>
    <link href="@Url.Content("~/Content/jPicker/jPicker-1.1.6.css")" rel="stylesheet" type="text/css" />
    <style type="text/css">
        .Field
        {
            display: inline-block;
        }
        select
        {
            width: 241px !important;
        }        
    </style>
}
@using (Html.BeginForm())
{
    <div style="text-align: center">
        <div class="Field">
            Warning: Concurrent users will interfere with each other in this page :)</div>
        <br />
        <div class="Field">
            Words
            @Html.ValidationMessageFor(It => It.Words)<br />
            @Html.TextAreaFor(It => It.Words, AttribsArea)
        </div>        
        <br />
        <div class="Field">
            Max Font Size
            @Html.ValidationMessageFor(It => It.MaxFontSize)<br />
            @Html.TextBoxFor(It => It.MaxFontSize, Attribs)
        </div>
        <div class="Field">
            Min Font Size
            @Html.ValidationMessageFor(It => It.MinFontSize)<br />
            @Html.TextBoxFor(It => It.MinFontSize, Attribs)
        </div>
        <br />
        <div class="Field">
            Width
            @Html.ValidationMessageFor(It => It.Width)<br />
            @Html.TextBoxFor(It => It.Width, Attribs)
        </div>
        <div class="Field">
            Height
            @Html.ValidationMessageFor(It => It.Height)<br />
            @Html.TextBoxFor(It => It.Height, Attribs)
        </div>
        <br />
        <div>
            Note : Angle will break CSS hover animation</div>
        <div class="Field">
            Angle
            @Html.ValidationMessageFor(It => It.Angle)<br />
            @Html.TextBoxFor(It => It.Angle, Attribs)
        </div>
        <div class="Field">
            Font<br />
            @Html.DropDownListFor(It => It.SelectedFont, Model.Fonts.ToSelectList(), Attribs)
        </div>
        <br />
        <div class="Field">
            Display Strategy<br />
            @Html.DropDownListFor(It => It.SelectedStrategy, Model.Strategies.ToSelectList(), Attribs)
        </div>
        <div class="Field">
            Theme<br />
            @Html.DropDownListFor(It => It.SelectedTheme, Model.Themes.ToSelectList(), Attribs)
        </div>
        <br />
        <div class="Field">
            Style<br />
            @Html.DropDownListFor(It => It.SelectedStyle, Model.Styles.ToSelectList(), Attribs)
        </div>
        <div class="Field">
            Margin
            @Html.ValidationMessageFor(It => It.Margin)<br />
            @Html.TextBoxFor(It => It.Margin, Attribs)
        </div>
        <div>
            Note : Click on the smaller box to pick the color. Choice of theme will affect colors, for example LightBg theme and black background will become gray. So will Darkbg and white.</div>
        <div class="Field">
            Background Color<br />
            @Html.TextBoxFor(It => It.BackgroundColor, new { id = "BackgroundExpandable", @class = "ProTextBox", style = "width: 190px" })
        </div>
        <div class="Field">
            Foreground Color<br />
            @Html.TextBoxFor(It => It.ForegroundColor, new { id = "ForegroundExpandable", @class = "ProTextBox", style = "width: 190px" })
        </div>  
        <br />
        <div>
            Note : If there is not enough space in the image to place all the words, the skipped words will appear here. Increase spiral room only when performance is bad on your server.</div>
        <div class="Field">Words skipped (Dont fill this)<br />
            @Html.TextBoxFor(It => It.Skipped, Attribs)
        </div>
        <div class="Field">Spiral Room (Fill only for performance)
            @Html.ValidationMessageFor(It => It.SpiralRoom)<br />
            @Html.TextBoxFor(It => It.SpiralRoom, Attribs)
        </div>
        <br />
        <div class="Field">
            Crop
            @Html.CheckBoxFor(It => It.Crop)
        </div>
        <div class="Field">
            Vertical Text Right
            @Html.CheckBoxFor(It => It.VerticalTextRight)
        </div>
        <div class="Field">
            Show Boundaries
            @Html.CheckBoxFor(It => It.ShowBoundaries)
        </div>
        <br />
        <br />
        <div class="Field">
            <input type="submit" value="Generate" class="Pro-Button" />
        </div>
    </div>
}
@if (null != Model.Borders)
{
    <div class="Sidebar-Control">
        <div class="Sidebar-Title">
            Disorganizer&trade;</div> <span class="Description">Took @(Model.GenerateTime/(float)1000) seconds</span>
        <div class="TagCloud" style="width:@(Model.Width)px; height:@(Model.Height)px;">
            @foreach (var Bounds in Model.Borders)
            {
                <a class="TagHover" 
        href="/Blog/Tag/@(Bounds.Key)"
        style="margin-left: @(Bounds.Value.Left)px; margin-top: @(Bounds.Value.Top)px; width: @(Bounds.Value.Width)px; height: @(Bounds.Value.Height)px">
                </a>
            }
            <img style="position:absolute;" src="@Url.Content("~/Content/Pro/Images/TinkeringCloud.png")" alt="Tag cloud" />
        </div>
    </div>
}
